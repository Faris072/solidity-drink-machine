{
	"compiler": {
		"version": "0.8.30+commit.73712a01"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_wallet",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "enum DrinkMachine.ProductEnum",
						"name": "productEnum",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "quantity",
						"type": "uint256"
					}
				],
				"name": "addProduct",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum DrinkMachine.ProductEnum",
						"name": "productEnum",
						"type": "uint8"
					},
					{
						"internalType": "uint256",
						"name": "qty",
						"type": "uint256"
					}
				],
				"name": "buy",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "enum DrinkMachine.ProductEnum",
						"name": "productEnum",
						"type": "uint8"
					}
				],
				"name": "getInfoProduct",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "name",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "price",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "quantity",
								"type": "uint256"
							}
						],
						"internalType": "struct ProductType",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "transactions",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "wallet",
				"outputs": [
					{
						"internalType": "contract IDrinkMachineWallet",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawAllFunds",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/DrinkMachine/DrinkMachine.sol": "DrinkMachine"
		},
		"evmVersion": "prague",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/DrinkMachine/DrinkMachine.sol": {
			"keccak256": "0x3bd87a9bf825eaad2f113d952bcec8d3968762ddae76c98d35d519a42167096d",
			"license": "MIT",
			"urls": [
				"bzz-raw://82e21f4a73c60aa423e68a39e43a5f1ac098397d8085085594d0cf71695d67b1",
				"dweb:/ipfs/QmZjb5zDB5qA8kXbKDBRVEPEr2jZUsPH2PpGADeWSSrTMe"
			]
		},
		"contracts/DrinkMachine/Structs.sol": {
			"keccak256": "0xd427730f1820b99eb149d0363a44dd6517f9af96aa7508e198158d7ca6407c60",
			"license": "MIT",
			"urls": [
				"bzz-raw://e34fd5bb4500e9f9b6e649cf3116674ebc9dec76d2e40b2c6fdfaf3c3358fb7e",
				"dweb:/ipfs/QmZiT7ZFfCTgH9nSvVcb7cLdmfWZWg23wgNVzANAR2vG4n"
			]
		},
		"contracts/DrinkMachineWallet/IDrinkMachineWallet.sol": {
			"keccak256": "0x1e0a91915ed769efb13f4ca39bc43662db09aecf66a8b86b2cf5acd32998f6fa",
			"license": "MIT",
			"urls": [
				"bzz-raw://d9d06cae19ec8f14074587152bef1e9dbf38fc6877c2b5a754b6b0134410c239",
				"dweb:/ipfs/QmRP9Z9Jj1i3QCNGs6jgB6JuuUVaGHQzA9RmK8r8cbZV7C"
			]
		}
	},
	"version": 1
}